state:
    @consistency(strong) @combiner(sum) @persistence(true)
	cache: Map<string, string>
    recor_cache: Map<uint, string>

init():
    set(cache, '0.0', 'bomb')

req(rpc):
    res = get(cache, get(rpc, 'latstring'))
	match res:
		Some(name) =>
            match name:
                'cached' =>
                    send(err('cache'), Up)
                'bomb' =>
                    send(err('bomb'), Up)
		None =>
            pass
    set(recor_cache, rpc_id(), get(rpc, 'latstring'))
	send(rpc, Down)

resp(rpc):
    match get(recor_cache, rpc_id()):
        Some(name) => 
            set(cache, name, 'cached')
        None =>
            pass
	send(rpc, Up)
