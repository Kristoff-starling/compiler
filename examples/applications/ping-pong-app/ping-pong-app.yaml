apiVersion: v1
kind: Service
metadata:
  labels:
    app: frontend
  name: frontend
spec:
  clusterIP: 10.96.88.88
  ports:
  - name: frontend
    port: 8080
    targetPort: 8080
  selector:
    app: frontend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 1
  template:
    metadata:
      name: frontend
      labels:
        app: frontend
    spec:
      # nodeName: <node-name>
      containers:
      - name: frontend
        image: nikolabo/ping_pong_app
        volumeMounts:
        - mountPath: /interceptors
          name: interceptor
        command: ["/app/ping-pong"]  # Command to run within the container
        args: ["frontend"] 
      volumes:
      - name: interceptor
        persistentVolumeClaim:
          claimName: frontend-interceptor-pvc
  selector:
    matchLabels:
      app: frontend
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: frontend-interceptor-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  hostPath:
    path: /tmp/interceptors
    type: Directory
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: frontend-interceptor-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: local-storage
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: ping
  name: ping
spec:
  ports:
  - name: ping
    port: 8081
    targetPort: 8081
  selector:
    app: ping
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ping
spec:
  replicas: 1
  template:
    metadata:
      name: ping
      labels:
        app: ping
    spec:
      # nodeName: <node-name>
      containers:
      - name: ping
        image: nikolabo/ping_pong_app
        volumeMounts:
        - mountPath: /interceptors
          name: interceptor
        command: ["/app/ping-pong"]  # Command to run within the container
        args: ["ping"]
      volumes:
      - name: interceptor
        persistentVolumeClaim:
          claimName: ping-interceptor-pvc 
  selector:
    matchLabels:
      app: ping
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: ping-interceptor-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  hostPath:
    path: /tmp/interceptors
    type: Directory
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ping-interceptor-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: local-storage
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: pong
  name: pong
spec:
  ports:
  - name: pong
    port: 8082
    targetPort: 8082
  selector:
    app: pong
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pong
spec:
  replicas: 1
  template:
    metadata:
      name: pong
      labels:
        app: pong
    spec:
      # nodeName: <node-name>
      containers:
      - name: pong
        image: nikolabo/ping_pong_app
        volumeMounts:
        - mountPath: /interceptors
          name: interceptor
        command: ["/app/ping-pong"]  # Command to run within the container
        args: ["pong"]
      volumes:
      - name: interceptor
        persistentVolumeClaim:
          claimName: pong-interceptor-pvc 
  selector:
    matchLabels:
      app: pong
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pong-interceptor-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  hostPath:
    path: /tmp/interceptors
    type: Directory
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pong-interceptor-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: local-storage
---