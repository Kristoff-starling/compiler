start: _NEWLINE* definition _NEWLINE* procedure _NEWLINE* procedure _NEWLINE* procedure

definition: "state:" _NEWLINE _INDENT declaration* _DEDENT

declaration: (consistency_decorator | combiner_decorator | persistence_decorator)* identifier ":" type_

consistency_decorator: "@consistency" "(" CNAME ")"
combiner_decorator: "@combiner" "(" CNAME ")"
persistence_decorator: "@persistence" "(" bool ")"

identifier: CNAME

type_: single_type
       | "Vec" "<" single_type ">"  -> vec_type
       | "Map" "<" single_type "," single_type ">" -> map_type

single_type: CNAME

procedure: "fn" name parameters body

name: CNAME

parameters: "(" (parameter | parameter ",") *  ")"

parameter: "rpc" | identifier

body: "{" statement* "}"

statement: (expr | assign | primitive | match) ";"

primitive: "send" "(" (expr | err) "," ("Up" | "Down") ")"

assign: identifier ":=" expr

match: "match" "(" expr ")" "{" action* "}"

action: pattern "=>" "{" statement* "}"

pattern: const
        | "None" -> none_pattern
        | "Some" "(" (identifier | err) ")" -> some_pattern


expr:  "(" expr ")" | identifier | method | func | const | expr op expr

method: get_method | set_method | delete_method | byte_size_method | size_method

func: identifier arguments

arguments: "(" (expr | (expr ","))*  ")"

const: CNAME | quoted_string | NUMBER

bool: "true" -> true | "false" -> false

get_method: "get" "(" identifier "," expr ")"
set_method: "set" "(" identifier "," ( expr "," expr | expr ) ")"
delete_method: "delete" "(" identifier "," expr ")"
byte_size_method: "byte_size(" identifier ")"
size_method: "size(" identifier ")"

op: "*" -> op_mul
       | "/" -> op_div
       | "+" -> op_add
       | "-" -> op_sub
       | "&&" -> op_land
       | "||" -> op_lor
       | "==" -> op_eq
       | "!=" -> op_neq
       | "<" -> op_lt
       | ">" -> op_gt
       | "<=" -> op_le
       | ">=" -> op_ge

quoted_string: /'[^']*'/

err: "err" "(" (quoted_string | CNAME) ")"

_NEWLINE: ( /\r?\n[\t ]*/ | COMMENT )+
COMMENT: /#[^\n]*/

%import common.SIGNED_NUMBER -> NUMBER
%import common.WS_INLINE
%import common.CPP_COMMENT
%import common.CNAME
%ignore WS_INLINE
%ignore CPP_COMMENT
%ignore COMMENT
%declare _INDENT _DEDENT
